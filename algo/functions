  // arr[]=
  // 1	1	0	1	0	0
	// 0	1	1	0	0	1
	// 1	0	1	1	0	0
	// 1	1	0	1	0	1
	// 1	1	1	1	1	1
	// 1	1	1	0	1	1

	// 1	1	0	1	0	0
	// 0	1	1	0	0	1
	// 1	0	1	1	0	0
	// 1	1	0	2	0	1
	// 1	2	1	2	1	1
	// 1	2	2	0	1	2

	int maxSquare(int ar[][]){
		int a[][],max=0;
		for(int i=0;i<l1;i++)
		for(int j=0;j<l2;j++){
			if(i==0||j==0)
				a[i][j]=ar[i][j];
			else
				if(ar[i][j]==1){
					a[i][j] = min(a[i-1][j],a[i][j-1],a[i-1][j-1])+1;
					if(max<a[i][j]) max=a[i][j];
				}
		}
		return max;
	}




// combsort
	arrsort(){
		for(int i=0;i<a.length;i++);
		int j=0;
		while(j+i<a.length){
			if(a[1][j]>a[1][i+j]){
				a[1][j] 	=	 a[1][j]^a[1][i+j];
				a[1][j+i] 	=	 a[1][j]^a[1][i+j];
				a[1][j] 	=	 a[1][j]^a[1][i+j];
			}
			j++;
		}
	}
